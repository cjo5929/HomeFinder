<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.happyhouse.user.model.dao.UserDao">
	<resultMap type="UserDto" id="UserBasic">
		<id column="user_id"  property="userId"/>
		<result column="user_password"  property="userPassword"/>
		<result column="user_email"  property="userEmail"/>
		<result column="user_phone"  property="userPhone"/>
		<result column="user_address"  property="userAddress"/>
		<result column="regist_date"  property="registDate"/>
		<result column="modified_date"  property="modifiedDate"/>
		<result column="user_role"  property="userRole"/>
		<result column="token"  property="refreshToken"/>
	</resultMap>
	<resultMap type="UserDto" id="userImage" extends="UserBasic">
		<association property="userImageDto" javaType="UserImageDto">
  		  <result column="original_name" property="originalName"/>
    	  <result column="fixed_name" property="fixedName"/>
    	  <result column="save_folder" property="saveFolder"/>
  		</association>
	</resultMap>
	<!-- 회원가입 -->
	<insert id="regist" parameterType="UserDto">
		insert into user(user_id, user_password, user_email, user_phone, user_address, user_role, modified_date)
		values(#{userId}, #{userPassword}, #{userEmail}, #{userPhone}, #{userAddress}, #{userRole}, #{modifiedDate})
	</insert>
	<!--  -->
	
	<!-- Token 발행 관련 -->
	<update id="updateRefreshToken" parameterType="UserDto">
		update user set token = #{refreshToken} where user_id = #{userId}
	</update>
	<update id="removeRefreshToken" parameterType="String">
		update user set token = null where user_id = #{userId}
	</update>
	<!--  -->
	
	<!-- User 정보 관련 -->
	<update id="resetPassword" parameterType="userDto">
		update user set user_password = #{userPassword} where user_id = #{userId}
	</update>
	<select id="findById" parameterType="String" resultMap="UserBasic">
		select * from user where user_id = #{userId}
	</select>
	
	<update id="update" parameterType="UserDto">
		update user set user_password = #{userPassword}, user_email=#{userEmail}, user_phone=#{userPhone},
		user_address = #{userAddress}, modified_date = #{modifiedDate} where user_id = #{userId}
	</update>
	
	<delete id="delete" parameterType="String">
		delete from user where user_id = #{userId}
	</delete>
	<!--  -->
	
	<!--  Image 관련  -->
	<update id="updateUserImage" parameterType="UserDto">
		update file_info set original_name = #{userImageDto.originalName},
		fixed_name = #{userImageDto.fixedName}, 
		save_folder = #{userImageDto.saveFolder} where user_id = #{userId} 
	</update>
	<insert id="insertUserImage" parameterType="UserDto">
		insert into file_info(user_id, original_name, fixed_name, save_folder)
		values (#{userId}, #{userImageDto.originalName}, 
		#{userImageDto.fixedName}, #{userImageDto.saveFolder})
	</insert>
	<select id="selectUserImageByCount" parameterType="UserDto">
		select count(*) from file_info where user_id = #{userId} and type="profile"
	</select>
	<select id="selectUserImage" parameterType="String" resultMap="userImage">
		select u.*, i.*
		from user u join file_info i
		on u.user_id = i.user_id
		where u.user_id = #{userId} and type="profile"
	</select>
	<delete id="deleteUserImage" parameterType="String">
		delete from file_info where user_id=#{userId}
	</delete>
	<!--  -->
</mapper>